Desafio #7 ‚Äî Sistema de Controle de Estoque (n√≠vel realista)

Tempo sugerido: 25‚Äì30 minutos

Contexto realista:

Voc√™ est√° desenvolvendo um pequeno sistema interno de controle de estoque para uma loja.
O objetivo √© criar um script em Python que permita cadastrar produtos, atualizar quantidades e calcular o valor total em estoque.

Requisitos:

Crie um dicion√°rio chamado estoque, onde a chave √© o nome do produto e o valor √© outro dicion√°rio com quantidade e preco_unitario.

Implemente fun√ß√µes para:

adicionar_produto(nome, quantidade, preco_unitario)

remover_produto(nome)

atualizar_quantidade(nome, nova_quantidade)

calcular_valor_total()

Exiba um menu interativo no terminal para o usu√°rio escolher a√ß√µes (usando input).

Mostre sempre o estoque atualizado ap√≥s cada opera√ß√£o.
Exemplo de execu√ß√£o (intera√ß√£o):
=== SISTEMA DE ESTOQUE ===
1. Adicionar produto
2. Remover produto
3. Atualizar quantidade
4. Mostrar valor total do estoque
5. Sair
Escolha uma op√ß√£o: 1
Nome do produto: Arroz
Quantidade: 10
Pre√ßo unit√°rio: 25.0
‚úÖ Produto adicionado!

Estoque atual:
{'Arroz': {'quantidade': 10, 'preco_unitario': 25.0}}

Escolha uma op√ß√£o: 4
Valor total do estoque: R$250.00
Crit√©rios de avalia√ß√£o:

Organiza√ß√£o e modulariza√ß√£o (fun√ß√µes bem definidas)

Uso correto de estruturas de dados

Clareza no fluxo e mensagens ao usu√°rio

Capacidade de simular um sistema funcional (sem depender de frameworks)

üí° Dica: esse tipo de desafio √© muito comum em est√°gios ‚Äî ele mostra se voc√™ sabe estruturar c√≥digo e pensar como um desenvolvedor.
